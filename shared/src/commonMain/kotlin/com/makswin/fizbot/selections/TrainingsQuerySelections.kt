//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.3.0'.
//
package com.makswin.fizbot.selections

import com.apollographql.apollo3.api.CompiledArgument
import com.apollographql.apollo3.api.CompiledField
import com.apollographql.apollo3.api.CompiledFragment
import com.apollographql.apollo3.api.CompiledSelection
import com.apollographql.apollo3.api.CompiledVariable
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.notNull
import com.makswin.fizbot.fragment.selections.fragmentTrainingSelections
import com.makswin.fizbot.type.GraphQLString
import com.makswin.fizbot.type.Training
import com.makswin.fizbot.type.TrainingPaginator
import kotlin.collections.List

public object TrainingsQuerySelections {
  private val `data`: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "__typename",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledFragment.Builder(
          typeCondition = "Training",
          possibleTypes = (listOf("Training"))
        ).selections(fragmentTrainingSelections.root)
        .build()
      )

  private val trainings_for_user: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "data",
          type = Training.type.notNull().list().notNull()
        ).selections(`data`)
        .build()
      )

  public val root: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "trainings_for_user",
          type = TrainingPaginator.type
        ).arguments(listOf(
          CompiledArgument("first", CompiledVariable("first")),
          CompiledArgument("orderBy", CompiledVariable("orderBy")),
          CompiledArgument("page", CompiledVariable("page")),
          CompiledArgument("where", CompiledVariable("where"))
        ))
        .selections(trainings_for_user)
        .build()
      )
}
