//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.3.0'.
//
package com.makswin.fizbot

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CompiledField
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.Query
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.obj
import com.makswin.fizbot.adapter.TrainingsQuery_ResponseAdapter
import com.makswin.fizbot.adapter.TrainingsQuery_VariablesAdapter
import com.makswin.fizbot.fragment.FragmentTraining
import com.makswin.fizbot.selections.TrainingsQuerySelections
import com.makswin.fizbot.type.QueryTrainingsForUserOrderByOrderByClause
import com.makswin.fizbot.type.QueryTrainingsForUserWhereWhereConditions
import kotlin.Int
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public data class TrainingsQuery(
  public val `where`: QueryTrainingsForUserWhereWhereConditions,
  public val orderBy: List<QueryTrainingsForUserOrderByOrderByClause>,
  public val first: Int,
  public val page: Int,
) : Query<TrainingsQuery.Data> {
  public override fun id(): String = OPERATION_ID

  public override fun document(): String = OPERATION_DOCUMENT

  public override fun name(): String = OPERATION_NAME

  public override fun serializeVariables(writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters): Unit {
    TrainingsQuery_VariablesAdapter.toJson(writer, customScalarAdapters, this)
  }

  public override fun adapter(): Adapter<Data> = TrainingsQuery_ResponseAdapter.Data.obj()

  public override fun rootField(): CompiledField = CompiledField.Builder(
    name = "data",
    type = com.makswin.fizbot.type.Query.type
  )
  .selections(selections = TrainingsQuerySelections.root)
  .build()

  public data class Data(
    public val trainings_for_user: Trainings_for_user?,
  ) : Query.Data

  public data class Trainings_for_user(
    /**
     * A list of Training items.
     */
    public val `data`: List<Data1>,
  )

  public data class Data1(
    public val __typename: String,
    /**
     * Synthetic field for 'fragmentTraining'
     */
    public val fragmentTraining: FragmentTraining,
  )

  public companion object {
    public const val OPERATION_ID: String =
        "a95f89d2dc0d6867b791013f104039d9933f30d19a93773762dc310311c64647"

    /**
     * The minimized GraphQL document being sent to the server to save a few bytes.
     * The un-minimized version is:
     *
     * query trainings($where: QueryTrainingsForUserWhereWhereConditions!, $orderBy:
     * \[QueryTrainingsForUserOrderByOrderByClause!\]!, $first: Int!, $page: Int!) {
     *   trainings_for_user(where: $where, orderBy: $orderBy, first: $first, page: $page) {
     *     data {
     *       __typename
     *       ...fragmentTraining
     *     }
     *   }
     * }
     *
     * fragment fragmentTraining on Training {
     *   starts_at
     *   ends_at
     *   title
     *   meeting_id
     *   meeting_password
     *   meeting_link
     *   meeting_recording_link
     * }
     */
    public const val OPERATION_DOCUMENT: String =
        "query trainings(${'$'}where: QueryTrainingsForUserWhereWhereConditions!, ${'$'}orderBy: [QueryTrainingsForUserOrderByOrderByClause!]!, ${'$'}first: Int!, ${'$'}page: Int!) { trainings_for_user(where: ${'$'}where, orderBy: ${'$'}orderBy, first: ${'$'}first, page: ${'$'}page) { data { __typename ...fragmentTraining } } }  fragment fragmentTraining on Training { starts_at ends_at title meeting_id meeting_password meeting_link meeting_recording_link }"

    public const val OPERATION_NAME: String = "trainings"
  }
}
