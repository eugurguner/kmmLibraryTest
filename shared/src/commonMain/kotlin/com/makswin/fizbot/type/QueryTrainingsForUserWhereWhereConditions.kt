//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.3.0'.
//
package com.makswin.fizbot.type

import com.apollographql.apollo3.api.Optional
import kotlin.Any
import kotlin.collections.List

/**
 * Dynamic WHERE conditions for the `where` argument on the query `trainings_for_user`.
 */
public data class QueryTrainingsForUserWhereWhereConditions(
  /**
   * The column that is used for the condition.
   */
  public val column: Optional<TrainingColumn?> = Optional.Absent,
  /**
   * The operator that is used for the condition.
   */
  public val `operator`: Optional<SQLOperator?> = Optional.Absent,
  /**
   * The value that is used for the condition.
   */
  public val `value`: Optional<Any?> = Optional.Absent,
  /**
   * A set of conditions that requires all conditions to match.
   */
  public val AND: Optional<List<QueryTrainingsForUserWhereWhereConditions>?> = Optional.Absent,
  /**
   * A set of conditions that requires at least one condition to match.
   */
  public val OR: Optional<List<QueryTrainingsForUserWhereWhereConditions>?> = Optional.Absent,
  /**
   * Check whether a relation exists. Extra conditions or a minimum amount can be applied.
   */
  public val HAS: Optional<QueryTrainingsForUserWhereWhereConditionsRelation?> = Optional.Absent,
)
